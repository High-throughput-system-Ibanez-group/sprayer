import { type NextPage } from "next";
import Head from "next/head";
import { useEffect, useState } from "react";
import { io, type Socket } from "socket.io-client";

let socket: Socket;

type MoveOptions = "X" | "Y" | "Z" | undefined;

const Home: NextPage = () => {
  const [selectedOption, setSelectedOption] = useState<MoveOptions>();

  const handleOptionChange = (event: React.ChangeEvent<HTMLSelectElement>) => {
    const MoveOption = event.target.value as MoveOptions;
    const isMoveOption =
      MoveOption === "X" || MoveOption === "Y" || MoveOption === "Z";
    if (isMoveOption) {
      setSelectedOption(MoveOption);
    }
  };

  useEffect(() => {
    void startSocket();
  }, []);

  const handleMoveClick = () => {
    console.log("Move button clicked");

    switch (selectedOption) {
      case "X":
        console.log("Move X");
        socket.emit("command", "test:x");
        break;
      case "Y":
        socket.emit("command", "test:y");
        console.log("Move Y");
        break;
      case "Z":
        socket.emit("command", "test:z");
        console.log("Move Z");
        break;
      default:
        console.log("No option selected");
    }
  };

  const handleZeroingClick = () => {
    console.log("ZeroingClick button clicked");
    socket.emit("command", "zeroing");
  };

  const startSocket = async () => {
    await fetch("/api/socket");
    socket = io();

    socket.on("connect", () => {
      console.log("connected");
    });
  };

  return (
    <>
      <Head>
        <title>IST Project</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex-1">
        <div className="flex h-screen flex-col">
          {/* Nav Bar */}
          <nav className="flex items-center justify-between bg-gray-800 p-4 text-white">
            <div className="text-xl font-bold">Sprayer</div>
            <div className="flex">
              <div className="mx-4 cursor-pointer">Home</div>
            </div>
          </nav>
          {/* Content */}
          <div className="flex flex-grow items-center justify-center">
            <div className="w-full max-w-lg p-4">
              <button
                className="inline-flex cursor-pointer items-center rounded bg-orange-400 py-2 px-4 font-bold text-gray-800 hover:bg-orange-200"
                onClick={handleZeroingClick}
              >
                zeroing
              </button>
              <div className="h-4" />
              <label className="mb-2 block font-bold" htmlFor="option-select">
                Select an option:
              </label>
              <div className="relative">
                <select
                  id="option-select"
                  value={selectedOption}
                  onChange={handleOptionChange}
                  className="block w-full appearance-none rounded border border-gray-200 bg-gray-200 py-2 px-4 pr-8 leading-tight text-gray-700 focus:border-gray-500 focus:bg-white focus:outline-none"
                >
                  <option value="">Select an option</option>
                  <option value="X">X</option>
                  <option value="Y">Y</option>
                  <option value="Z">Z</option>
                </select>
                <div className="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                  <svg
                    className="h-4 w-4 fill-current"
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 20 20"
                  >
                    <path
                      fillRule="evenodd"
                      d="M6.293 7.293a1 1 0 011.414 0L10 9.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z"
                      clipRule="evenodd"
                    />
                  </svg>
                </div>
              </div>
              <button
                className="mt-4 cursor-pointer rounded bg-blue-500 py-2 px-4 font-bold text-white hover:bg-blue-700"
                onClick={handleMoveClick}
                disabled={!selectedOption}
              >
                Move
              </button>
            </div>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
